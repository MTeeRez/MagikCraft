name: Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: npm install
      - run: npm run build --if-present
      - run: npm test
        env:
          CI: true
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build with Ant
        run: ant -noinput -buildfile build.xml
      - name: Build release zip
        run: |
          mkdir -p magikcraft/scriptcraft
          mv target/js/* magikcraft/scriptcraft/
          cp -r src/main/js/* magikcraft/scriptcraft/
          cp -r SMA/sma-bootstrap magikcraft/scriptcraft/plugins
          mkdir -p magikcraft/scriptcraft-plugins/__jasmine
          cp -r SMA/__jasmine/ magikcraft/scriptcraft-plugins/__jasmine/
          cp SMA/*.md magikcraft/
          cp target/scriptcraft.jar magikcraft/magik-scriptcraft.jar
          zip -r magikcraft-release.zip magikcraft/*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      - name: Get the version # https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/td-p/31595
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Upload Release Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./magikcraft-release.zip
          asset_name: Magikcraft-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip
